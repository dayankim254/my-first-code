import pandas as pd
from sklearn.model_selection import train_test_split
from sklearn.linear_model import LogisticRegression
from sklearn.preprocessing import StandardScaler
from sklearn.metrics import classification_report, confusion_matrix, roc_curve, auc
import matplotlib.pyplot as plt

data = pd.read_csv('your_data.csv')

features = ['GPA', 'Age', 'Gender']
target_enrollment = 'Enrollment_Status'
target_graduation = 'Graduation_Status'

X_enrollment = data[features]
y_enrollment = data[target_enrollment]

X_train, X_test, y_train, y_test = train_test_split(X_enrollment, y_enrollment, test_size=0.2, random_state=42)

scaler = StandardScaler()
X_train_scaled = scaler.fit_transform(X_train)
X_test_scaled = scaler.transform(X_test)

logreg_model = LogisticRegression()
logreg_model.fit(X_train_scaled, y_train)

y_pred = logreg_model.predict(X_test_scaled)

print("Enrollment Confusion Matrix:\n", confusion_matrix(y_test, y_pred))
print("\nEnrollment Classification Report:\n", classification_report(y_test, y_pred))

y_prob = logreg_model.predict_proba(X_test_scaled)[:, 1]
fpr, tpr, thresholds = roc_curve(y_test, y_prob)
roc_auc = auc(fpr, tpr)

plt.figure(figsize=(8, 6))
plt.plot(fpr, tpr, color='blue', lw=2, label=f'Enrollment ROC curve (AUC = {roc_auc:.2f})')
plt.plot([0, 1], [0, 1], color='gray', linestyle='--')
plt.xlim([0.0, 1.0])
plt.ylim([0.0, 1.05])
plt.xlabel('False Positive Rate')
plt.ylabel('True Positive Rate')
plt.title('Enrollment Status ROC Curve')
plt.legend(loc='lower right')
plt.show()

X_graduation = data[features]
y_graduation = data[target_graduation]

X_train_grad, X_test_grad, y_train_grad, y_test_grad = train_test_split(X_graduation, y_graduation, test_size=0.2, random_state=42)

X_train_grad_scaled = scaler.fit_transform(X_train_grad)
X_test_grad_scaled = scaler.transform(X_test_grad)

logreg_model_grad = LogisticRegression()
logreg_model_grad.fit(X_train_grad_scaled, y_train_grad)

y_pred_grad = logreg_model_grad.predict(X_test_grad_scaled)

print("Graduation Confusion Matrix:\n", confusion_matrix(y_test_grad, y_pred_grad))
print("\nGraduation Classification Report:\n", classification_report(y_test_grad, y_pred_grad))

y_prob_grad = logreg_model_grad.predict_proba(X_test_grad_scaled)[:, 1]
fpr_grad, tpr_grad, thresholds_grad = roc_curve(y_test_grad, y_prob_grad)
roc_auc_grad = auc(fpr_grad, tpr_grad)

plt.figure(figsize=(8, 6))
plt.plot(fpr_grad, tpr_grad, color='green', lw=2, label=f'Graduation ROC curve (AUC = {roc_auc_grad:.2f})')
plt.plot([0, 1], [0, 1], color='gray', linestyle='--')
plt.xlim([0.0, 1.0])
plt.ylim([0.0, 1.05])
plt.xlabel('False Positive Rate')
plt.ylabel('True Positive Rate')
plt.title('Graduation Status ROC Curve')
plt.legend(loc='lower right')
plt.show()
